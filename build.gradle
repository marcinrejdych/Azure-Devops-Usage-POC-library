plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.60'
    id 'application'
    id 'maven-publish'
    id 'jacoco'
    id "org.owasp.dependencycheck" version "5.2.4"
    id "com.github.hierynomus.license-report" version"0.15.0"
    id "org.sonarqube" version "2.8"
}

group = "io.relayr"
version = file("$projectDir/version").text.trim()

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'com.sparkjava:spark-core:2.9.1'
    implementation "org.slf4j:slf4j-api:1.7.6"
    implementation "org.apache.logging.log4j:log4j-api:2.11.1"
    implementation "org.apache.logging.log4j:log4j-core:2.11.1"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.11.1"
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

application {
    mainClassName = 'com.proximetry.test.app.AppKt'
}

final File archivesDir = new File("${buildDir}/archives")

tasks.register("archiveTestResults", Zip.class).configure { Zip zip ->
    zip.dependsOn(tasks.named("test"))
    zip.from("${buildDir}/test-results/")
    zip.getArchiveFileName().set("TestResults.zip")
    zip.getDestinationDirectory().set(archivesDir)
}

tasks.register("archiveCoverageResults", Zip.class).configure { Zip zip ->
    zip.dependsOn(tasks.named("jacocoTestReport"))
    zip.from("${buildDir}/reports/tests/")
    zip.rename("${path}.xml", "${name}-${version}.xml")
    zip.getArchiveFileName().set("CoverageResults.zip")
    zip.getDestinationDirectory().set(archivesDir)
}

tasks.register("downloadLicensesResults", Zip.class).configure { Zip zip ->
    zip.dependsOn(tasks.named("downloadLicenses"))
    zip.from("${buildDir}/reports/license/")
    zip.getArchiveFileName().set("downloadLicenses.zip")
    zip.getDestinationDirectory().set(archivesDir)
}

tasks.register("dependencyCheckResults", Zip.class).configure {
    it.dependsOn(tasks.named("dependencyCheckAnalyze"))
    it.from("${buildDir}/reports/dependency-check-report.html")
    it.getArchiveFileName().set("dependencyCheckReport.zip")
    it.getDestinationDirectory().set(archivesDir)
}

tasks.named("build") {
    dependsOn(tasks.named("installDist"))
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            artifact(archiveTestResults) {
                classifier "test_results_archive"
                extension "zip"
            }
            artifact(dependencyCheckResults) {
                classifier "OWASP-dependency-check-report"
                extension "zip"
            }
            artifact(archiveCoverageResults) {
                classifier "coverage_archive"
                extension "zip"
            }
            artifact(downloadLicensesResults) {
                classifier "licenses_report"
                extension "zip"
            }
        }
    }

    repositories {
        if(findProperty("azureRepoUsername") && findProperty("azureRepoPassword")) {
            maven {
                url 'https://pkgs.dev.azure.com/marcinrejdych/cff860a1-81a4-4215-a685-c462f3c21017/_packaging/maven-azure/maven/v1'
                name 'maven-azure'
                credentials {
                    username = azureRepoUsername
                    password = azureRepoPassword
                }
                authentication {
                    basic(BasicAuthentication)
                }
            }
        } else {
            mavenLocal()
        }
    }
}

